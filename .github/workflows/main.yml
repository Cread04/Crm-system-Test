name: .NET Build & Test with Playwright and Postman
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repository
      uses: actions/checkout@v3
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    
    # Install system dependencies
    - name: Install required libraries
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libasound2t64 \
          libatk1.0-0 \
          libatk-bridge2.0-0 \
          libcups2 \
          libdrm2 \
          libgbm1 \
          libnspr4 \
          libnss3 \
          libx11-6 \
          libxcomposite1 \
          libxdamage1 \
          libxext6 \
          libxfixes3 \
          libxrandr2
      
    - name: Install project dependencies
      run: |
        dotnet restore
        # Add required EF Core design package
        dotnet add server/Server.csproj package Microsoft.EntityFrameworkCore.Design
      
    - name: Build projects
      run: |
        dotnet build server/Server.csproj
        dotnet build Playwright/Playwright.csproj
    
    # Robust database setup
    - name: Setup database
      run: |
        # Install EF Core tools
        dotnet tool install --global dotnet-ef
        echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
        
        # Verify project file exists
        if [ ! -f "server/Server.csproj" ]; then
          echo "Error: server.csproj not found!"
          ls -la server/
          exit 1
        fi
        
        # Run migrations using explicit project file paths
        dotnet ef database update --project server/Server.csproj --startup-project Server/Server.csproj --verbose
        
        # Alternative if using DbContext directly
        # dotnet exec --runtimeconfig server/bin/Debug/net8.0/Server.runtimeconfig.json --depsfile Server/bin/Debug/net8.0/Server.deps.json ef database update
    
    # Install Playwright browsers
    - name: Install Playwright
      run: |
        dotnet tool install --global Microsoft.Playwright.CLI
        echo "$HOME/.dotnet/tools" >> $GITHUB_PATH
        cd Playwright
        dotnet playwright install --with-deps chromium
    
    # Start services
    - name: Start server
      run: |
        cd server
        nohup dotnet run > server.log 2>&1 &
        echo "Waiting for server..."
        timeout 30 bash -c 'until curl -s http://localhost:5000/api/health >/dev/null; do sleep 1; done'
    
    - name: Start client
      run: |
        cd client
        npm install
        nohup npm run dev > client.log 2>&1 &
        echo "Waiting for client..."
        timeout 30 bash -c 'until curl -s http://localhost:5173 >/dev/null; do sleep 1; done'
    
    # Run tests
    - name: Run Playwright tests
      run: |
        cd Playwright
        dotnet test --logger "console;verbosity=detailed"
    
    - name: Run unit tests
      run: dotnet test Xunit/Xunit.csproj
      
    - name: Run Postman tests
      run: |
        npm install -g newman
        newman run Postman/CRM-Testning.postman_collection
