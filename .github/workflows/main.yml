name: .NET Build & Test with Playwright and Postman

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Tosspoppe2004
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Playwright packages
      run: |
        dotnet add Playwright/Playwright.csproj package Microsoft.Playwright.NUnit
        dotnet add Playwright/Playwright.csproj package Microsoft.Playwright
        dotnet tool install --global Microsoft.Playwright.CLI

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
        liboss4-salsa-asound2 \
        libatk1.0-0 \
        libatk-bridge2.0-0 \
        libatomic1 \
        libcairo2 \
        libcups2 \
        libdbus-1-3 \
        libdrm2 \
        libgbm1 \
        libglib2.0-0 \
        libgtk-3-0 \
        libnspr4 \
        libnss3 \
        libpango-1.0-0 \
        libx11-6 \
        libxcb1 \
        libxcomposite1 \
        libxdamage1 \
        libxext6 \
        libxfixes3 \
        libxkbcommon0 \
        libxrandr2 \
        xvfb \
        postgresql-client

    - name: Set connection string for CI
      run: echo "CONNECTION_STRING=Host=localhost;Port=5432;Username=postgres;Password=Tosspoppe2004;Database=postgres" >> $GITHUB_ENV

    - name: Wait for PostgreSQL and Seed Data
      run: |
        sleep 5
        psql postgresql://postgres:postgres@localhost:5432/postgres <<EOF
        CREATE TYPE role AS ENUM ('GUEST', 'USER', 'ADMIN');
        CREATE TYPE issue_state AS ENUM ('OPEN', 'CLOSED', 'PENDING');
        CREATE TYPE sender AS ENUM ('USER', 'SUPPORT');

        CREATE TABLE companies (
          id SERIAL PRIMARY KEY,
          name TEXT NOT NULL
        );

        INSERT INTO companies (name) VALUES ('Demo AB');
        EOF

    - name: Install browsers
      run: |
        cd Playwright
        dotnet build
        playwright install --with-deps chromium
        cd ..

    - name: Verify installation
      run: |
        ls -la ~/.cache/ms-playwright/
        playwright --version
        dotnet tool list -g

    - name: Wait for PostgreSQL to be ready
      run: |
        for i in {1..15}; do
          pg_isready -h localhost -p 5432 -U postgres && echo "Postgres is ready" && exit 0
          echo "Waiting for Postgres..."
          sleep 2
        done
        echo "Postgres did not start in time" && exit 1



    - name: Start server
      run: |
        cd server/
        dotnet run &
        echo "Server starting..."
        sleep 10
        cd ..

    - name: Install client dependencies and start
      run: |
        cd client/
        npm install
        npm run dev &
        echo "Client starting..."
        sleep 15
        cd ..

    - name: Check if services are running
      run: |
        echo "Checking if client and server are running..."
        netstat -tulpn
        curl -v http://localhost:5173/ || echo "Client service not responding"

    - name: Set HEADLESS environment variable
      run: echo "HEADLESS=true" >> $GITHUB_ENV

    - name: Run Playwright tests
      run: xvfb-run --auto-servernum dotnet test Playwright --no-build --verbosity normal

    - name: Run unit tests
      run: dotnet test Xunit/ --no-build --verbosity normal

    - name: Install Newman
      run: npm install -g newman
